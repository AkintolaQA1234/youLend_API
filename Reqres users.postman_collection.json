{
	"info": {
		"_postman_id": "55338d31-50a2-42f7-afc7-b4d9a07683e0",
		"name": "Reqres users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get list of users",
			"request": {
				"method": "GET",
				"header": [],
				"url": null
			},
			"response": []
		},
		{
			"name": "User not found",
			"request": {
				"method": "GET",
				"header": [],
				"url": null
			},
			"response": []
		},
		{
			"name": "Create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();\r",
							"pm.test(\"User is morpheus\", () => {\r",
							"    pm.expect(response.name).to.eql(\"morpheus\");\r",
							"    pm.expect(response.job).to.eql(\"leader\");\r",
							"})\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a JSON body\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"\r",
							"//validating schema\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"name\": \"morpheus\",\r",
							"            \"job\": \"leader\",\r",
							"            \"id\": \"704\",\r",
							"            \"createdAt\": \"2021-08-30T23:41:34.207Z\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"name\",\r",
							"        \"job\",\r",
							"        \"id\",\r",
							"        \"createdAt\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"morpheus\"\r",
							"            ]\r",
							"        },\r",
							"        \"job\": {\r",
							"            \"$id\": \"#/properties/job\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The job schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"leader\"\r",
							"            ]\r",
							"        },\r",
							"        \"id\": {\r",
							"            \"$id\": \"#/properties/id\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The id schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"704\"\r",
							"            ]\r",
							"        },\r",
							"        \"createdAt\": {\r",
							"            \"$id\": \"#/properties/createdAt\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The createdAt schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"2021-08-30T23:41:34.207Z\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"var json = pm.response.json()\r",
							"pm.test(\"schema is valid\", function(){\r",
							"pm.expect(tv4.validate(json,schema)).to.be.true;  \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"pm.test(\"User name is updated to morpheus zion resident\", () => {\r",
							"    pm.expect(response.name).to.eql(\"morpheus\");\r",
							"    pm.expect(response.job).to.eql(\"zion resident\");\r",
							"})\r",
							"\r",
							"pm.test(\"Job title no longer includes leader\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"leader\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user job title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var response = pm.response.json();\r",
							"pm.test(\"Job title updated to QA tester\", () => {\r",
							"    pm.expect(response.name).to.eql(\"morpheus\");\r",
							"    pm.expect(response.job).to.eql(\"QA Tester\");\r",
							"})\r",
							"pm.test(\"Morpheus job title to no longer include leader or zion leader\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"leader\",\"zion leader\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"QA Tester\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}